using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class EnemyHealth : MonoBehaviour
{
    [SerializeField] private int enemyHealth;
    [SerializeField] private int enemyDamage;
    private Rigidbody2D enemyBody;
    [SerializeField] private float deathDelay;
    private Vector3 hitDirection;
    private EnemyMovement enemyMovement;
    private bool enemyDead;
    [SerializeField] private float rotationIncrement;

    void Start()
    {
        enemyBody = GetComponent<Rigidbody2D>();
        enemyMovement = GetComponent<EnemyMovement>();
    }

    void Update()
    {
        if(enemyDead)
        {
            RotateDeadEnemy();
        }
    }

    void OnTriggerEnter2D(Collider2D enemyHitCollision)
    {
        if(enemyHitCollision.CompareTag("PlayerBullet"))
        {
            enemyHealth -= enemyDamage;
            Debug.Log(enemyHealth);

            if(enemyHealth <= 0)
            {
                enemyDead = true;
            }
        }
    }

    void RotateDeadEnemy()
    {
        hitDirection = enemyMovement.enemyFacingRight ? Vector3.right : Vector3.right * -1;
        Vector3 incremenOptionNeg = new Vector3(-rotationIncrement * Time.deltaTime, -rotationIncrement * Time.deltaTime, 0);
        Vector3 incremenOptionPos = new Vector3(rotationIncrement * Time.deltaTime, rotationIncrement * Time.deltaTime, 0);
        Vector3 incrementVector = enemyMovement.enemyFacingRight ? incremenOptionNeg : incremenOptionPos;
        Vector3 rotationVector = transform.right + incrementVector;

        if(transform.right.x > 0)
        {
            enemyBody.freezeRotation = false;
            transform.rotation *= Quaternion.FromToRotation(transform.right, rotationVector);
        }
	else
	{
                StartCoroutine(EnemyDeath());

	}
    }
    IEnumerator EnemyDeath()
    {
        yield return new WaitForSeconds(deathDelay);
        Destroy(gameObject);
    }
}
